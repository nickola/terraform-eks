apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-availability-zones
data:
  nginx.conf: |
    load_module /usr/lib/nginx/modules/ngx_http_js_module.so;

    user nginx;
    worker_processes auto;

    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    events { worker_connections 1024; }

    http {
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /var/log/nginx/access.log main;

      sendfile on;
      keepalive_timeout 65;

      # JavaScript
      js_import index.js;

      server {
        listen 80;

        location / {
          js_content index.handler;
        }
      }
    }

  index.js: |
    function handler(request) {
      let response = 'I am nginx from pod: ' + (process.env.POD_NAME || '<unknown>') + '\n';

      request.headersOut['Content-Type'] = 'text/html';
      request.return(200, response);
    }

    export default { handler };
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-availability-zones
spec:
  replicas: 2
  selector:
    matchLabels:
      app: deployment-availability-zones
  template:
    metadata:
      labels:
        app: deployment-availability-zones
    spec:
      # Use different availability zones for replicas if possible (because "preferred...", not "required...")
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: topology.kubernetes.io/zone
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - deployment-availability-zones
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - name: web
              containerPort: 80
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - mountPath: /etc/nginx
              name: nginx-conf
              readOnly: true
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 100m
              memory: 256Mi
      volumes:
        - name: nginx-conf
          configMap:
            name: deployment-availability-zones
---
apiVersion: v1
kind: Service
metadata:
  name: deployment-availability-zones
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb # Use Network Load Balancer (by default: Classic Load Balancer)
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local # Preserves the client source IP (for correct AWS Load Balancer health checks)
  ports:
    - protocol: TCP
      port: 80
      targetPort: web
      nodePort: 30080 # Use this port on nodes (not random)
  selector:
    app: deployment-availability-zones
